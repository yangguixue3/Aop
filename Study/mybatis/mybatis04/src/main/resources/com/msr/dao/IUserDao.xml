<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.msr.dao.IUserDao">

    <resultMap id="userMap" type="user">
        <id column="id" property="userId"></id>
        <result column="username" property="userName" ></result>
        <result column="birthday" property="userBirthday" ></result>
        <result column="sex" property="userSex" ></result>
        <result column="address" property="userAddress" ></result>
        <!--查询用户下的所有账户
            一对多
            collection : 用于建立一对多中的集合属性的对应关系
                    property: javaBean 属性名
                    ofType: list<> 泛型类型
                    column: 表account.uid 的外键是 user.id => 把 user.id 与 account.uid 相关联。去查询
                            通俗:把user.id 作为 findByUid Sql文的参数 进行查询
                    select: dao层接口中的方法 查询account

        -->
        <collection property="accounts" ofType="account" column="id" select="com.msr.dao.AccountDao.findByUid"></collection>
    </resultMap>

    <select id="findAll" resultMap="userMap">
        select * from user
    </select>

    <select id="findById" parameterType="Integer" resultType="user">
        select  id userId , username userName , birthday userBirthday ,sex userSex , address userAddress  from user where id = #{uid}
    </select>

</mapper>